---
# Copy


# - name: Check if kube-config exists locally
#   delegate_to: localhost
#   become: false
#   ansible.builtin.stat:
#     path: "{{ kubernetes_kube_config_location }}"
#   register: kube_config_script

# - name: Provision .kube/config from kube-config file
#   ansible.builtin.copy:
#     src: "{{ kubernetes_kube_config_location }}"
#     dest: "/home/{{ kubernetes_user }}/.kube/config"
#     owner: "{{ kubernetes_user }}"
#     group: "{{ kubernetes_user }}"
#     mode: '0755'
#   when:
#     - kube_config_script.stat.exists

# - name: Check if kubelet.conf exists locally
#   delegate_to: localhost
#   become: false
#   ansible.builtin.stat:
#     path: "{{ kubernetes_kubelet_conf_location }}"
#   register: kubelet_conf_script

# - name: Provision /etc/kubernetes/kubelet.conf on worker nodes
#   ansible.builtin.copy:
#     src: "{{ kubernetes_kubelet_conf_location }}"
#     dest: /etc/kubernetes/kubelet.conf
#     owner: root
#     group: root
#     mode: '0755'
#   when:
#     - kubelet_conf_script.stat.exists

# - name: Create pki directory if it does not exist
#   ansible.builtin.file:
#     path: "/etc/kubernetes/pki"
#     state: directory
#     mode: '0755'
#     owner: root
#     group: root

# - name: Check if ca.crt exists under /etc/kubernetes/pki
#   ansible.builtin.stat:
#     path: /etc/kubernetes/pki/ca.crt
#   register: remote_ca_cert

# - name: Copy K8S CA cert to remote
#   ansible.builtin.copy:
#     src: "{{ kubernetes_ca_cert_location }}"
#     dest: /etc/kubernetes/pki/ca.crt
#     owner: root
#     group: root
#     mode: '0755'

# - name: Copy join script to remote
#   run_once: true
#   ansible.builtin.copy:
#     src: "{{ kubernetes_join_script }}"
#     dest: "/home/{{ kubernetes_user }}/kubeadm-join.sh"
#     owner: "{{ kubernetes_user }}"
#     group: "{{ kubernetes_user }}"
#     mode: '0755'

# - name: Execute kubeadm-join.sh
#   ansible.builtin.shell: "/home/{{ kubernetes_user }}/kubeadm-join.sh"
#   become: true
#   when: "'kube_workers' in group_names"
